<?phpnamespace App\Http\Controllers\Customer;use App\Customer;use App\CustomerUser;use App\Http\Controllers\Controller;use App\Http\Requests;use Illuminate\Support\MessageBag;use Illuminate\Validation\ValidationException;use Illuminate\Support\Facades\Auth;use Illuminate\Http\Request;use Illuminate\Support\Facades\Redirect;class AuthController extends Controller{    public function getSignin(Request $request)    {        // Show the page        return view('customer.auth.login');    }    public function authenticate($customer){        $customer_details = CustomerUser::where('email',$customer['email'])->first();        if($customer_details->password == $customer['password']){            return $customer_details;        }    }    public function login(Request $request,MessageBag $message_bag){        //check_customer        try{            $check_customer = CustomerUser::where('email', $request->get('email'))->first();            if($check_customer == NULL)            {                $message_bag->add('token', 'This Account Does Not Exist');                return Redirect::back()->withInput()->withErrors($message_bag);            }            // Try to log the user in            if($request->password == $check_customer->password){                // Redirect to the dashboard page                //Activity log                session()->put('customer_id',$check_customer->id);                session()->put('customer',$check_customer);                //activity log ends                return redirect(url("customer/dashboard"));            }else{                $message_bag->add('email', 'Password Incorrect Please Try Again');                return Redirect::back()->withInput()->withErrors($message_bag);            }        }catch (ValidationException $e) {            throw ValidationException::withMessages([                $message_bag->add('email', 'This Account Does Not Exist')]);        }    }    public function Logout(){        if (session()->has('customer_id')) {            //Activity log            session()->flush();        }        // Redirect to the customer page        return redirect()->route('customerHome');    }}